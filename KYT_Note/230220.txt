
몬스터 정보

언리얼에 내장된 데이터 테이블이라는 기능을
	엑셀파일로 export할 수 있다.
	-> 
	-> 최우선적으로 정보를 담을 구조체를 정의해야함
	-> c++로 작성 후 데이터를 불러와 사용

몬스터의 정보를 표현할 구조체를 정의하자

	-> DataTable 용도로 사용할 구조체
	-> GameInfo.h 아래 작성

TMAP : 일종의 해쉬맵
	-> 탐색에 최적화

몬스터정보를 한번만 로드해놓고
	-> 원할때 제거한다면 불필요한 로딩을 줄일 수 있다.
	-> 게임인스턴스 : 게임시작시 생성후, 게임이 진행되는동안은 유지되다가, 게임이 종료될때 제거
		-> 디폴트 게임인스턴스 클래스를 상속받는 사용자 설정 클래스를 생성 할 수 있다.
	-> 게임인스턴스는 월드객체를 통해 접근가능하다.

블랙보드
	-> 비헤이비어트리를 이용해 AI를 만들때 필요한 데이터를 저장하는 공간
	
비헤이비어트리
	서비스
		-> 비헤이비어 트리를 구성하는 노드에 실시간으로 동작하는 기능을 추가한다.
	
	데코레이터
		-> 비헤이비어 트리를 구성하는 노드에 실시간으로 동작하는 기능을 추가한다.
		-> 해당 노드의 성공,실패 여부를 결정지어준다.


언리얼의 Project.Build.cs 파일의
	-> 기본적으로 AI모듈이 적용되어있지 않음
	-> c++ 으로 AI르ㅜㄹ 사용하기위해
	-> 기본 빌드의 PublicDependencyModuleNames.AddRange 에 "AIModule"를 추가한다.


비헤이비어트리의 서비스를 갖는 각 오브젝트는 
	-> UBehaviorTreeComponent롤 구분한다.
	UBehaviorTreeComponent는 자신을 가지고 있는 AI컨트롤러를 알고 있다.






