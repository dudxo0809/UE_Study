Matarial


	Mesh는 정점의 정보를 구성 : 형태만 구성한다.
	색상 등의 정보는 머티리얼로 설정한다.



머티리얼인스턴스
	스태틱 & 다이나믹

	-> 한번 머티리얼이 지정되면 머티리얼에 영향을 줄 수 없다.
	-> 그러나 이를 가능하게 하는게 머티리얼 인스턴스이다.

	스태틱 머티리얼 인스턴스
		-> 런타임에 바꿀 수 없다.
		-> 
	-> 기본 머티리얼을 수정하고 나면 반드시 셰이더 컴파일이 일어난다.
	-> 원본을 바구지 않고 인스턴스를 바꾸면 셰이더 컴파일을 수행하지 않는다.
		-> 빠르게 작업할 수 있다는 장점
		-> 굳이 원본머티리얼을 열어서 작업할 필요 x
		ex) 같은 재질의 머티리얼의 인스턴스 3개를 생성 후 각각 색을 다르게 설정

	다이나믹 머티리얼 인스턴스
		-> 게임을 플레이하는중에 머티리얼을 수정할 수 있다.
		
(참고)  https://docs.unrealengine.com/4.27/ko/RenderingAndGraphics/Materials/MaterialInstances/



머티리얼 파라미터 컬렉션
	-> 다양한 머티리얼이 접근할 수 있음
		-> 일종의 데이터테이블과 비슷한 기능을 수행



머티리얼 함수
	-> 원본머티리얼에 너무많은 작업을하면 너무 복잡해짐
	-> 언리얼에서 제공하는 머티리얼 함수를 호출할 수 있음




(5.1버전)
	오버레이 머티리얼이 추가됨
	-> 메쉬의 기존 머티리얼을 사용하는 상태에서
	-> 그 위에 추가로 덮어줄 머티리얼을 지정할 수 있음



언리얼의 렌더링은 디퍼드렌더링+글로벌렌더링의 조합으로 이루어짐



머티리얼 에디터

	머티리얼의 이름을 가진 노드
		: 머티리얼을 정하는 최종노드
	
	베이스컬러 : RGb
	메탈릭 : 얼마나 금속같은지
	스페큘러 : 비금속 표면, 표면의 하이라이트정도
	러프니스 : 얼마나 부드러운지, 0이면 거울처럼 반사함, 1이면 매트함
	이미시브컬러 : 자체적으로 빛을 발광함
	오파시티 : 불투명도, 0이면 완전 투명함
		-> 기본으로 막혀있는데, 언리얼은 디퍼드렌더링을함
		-> 반투명물체에 대한 조명 처리가 까다로움	
		-> 이를 활성화하면 메탈릭,스페출러, 러프니스가 비활성화됨
			-> 반투명물체에대한 조명처리를 열수는 있지만 성능저하가 있을 수 있음
	오파시티마스크 : 완전투명or불투명 양자택일만 가능함
	노말 : 범프매핑, 정점을 늘려 폴리곤이 늘어나면 렌더링시 부하가 커짐
			-> 범프매핑 렌더링 방식은 일종의 트릭
			-> 완전 평면에도 울퉁불퉁한 느낌을 낼 수 있음
			-> 원본 rgb에 노말을 적용하면 범프매핑을 할 수 있다.
		-> 노말이 없는 에셋은 사용하지 말자
			-> 짱 느림
	월드포지션오프셋: 정점이 출력되는 위치를 바꿔줄 수 있다.
	엠비언트오클루전
		-> 셀프셰도잉: 자기자신한테 그림자처리
	굴절 : 표면에 굴절효과를 줌


피직스머티리얼
	-> 물리적으로 어떤 재질인지를 나타냄
	-> 발자국 소리등을 구분할때 사용가능, 흙, 나무바닥등 


머티리얼 디테일창)

머티리얼도메인
	-> 서피스 : 3차원물체에 표현할때 사용
	-> 디퍼드데칼 : 데칼용 재질을 만들때 사용
	-> 포스트프로세스 : 포스트 프로세싱용 머티리얼을 만들때 사용
		-> 화면을 후처리하는 효과; 블러효과 등, 사용자 정의 포스트 프로세스효과를 만들때 사용
	-> 유저인터페이스 : UI를 만들때 사용

블렌드모드
	-> opaque : 불투명
	-> translucent : 투명

셰이딩모드
	-> default : 기본적으론 default Lit
	-> 각각 용도에 맞게 사용함

양면
	-> 일반적으로 뒷면에서 물체를 바라보면 Backface culling때문에 보이지 않음
	-> 양면으로 볼 수 있게 함













