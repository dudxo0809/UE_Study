
HUD와 UI를 구현할때
기본적으로 UUserWidget은 상속을 받고 시작함

	-> 각각 이를 상속받는 UMainHUDBase와 UPlayerInfoBase를 생성
	
	-> 이전에 액터는 여러개의 컴포넌트를 자식으로 받았다.
	-> 유저위젯은 여러 유저위젯을 자식으로 받는다.

CreateDefaultSubobject
	-> 호출한 클래스에 템플릿으로 보낸 타입의 객체를 할당하고 이를 가리키는 포인터를 리턴
	-> 이 함수를 호출한 순간 컴포넌트로 추가가 됨 (액터가 가짐)
	-> 멤버 포인터 변수로 이 값을 가지는 이유가 
		-> 상위 클래스인 액터에 생성된 컴포넌트가 붙는데 자식에서 이를 가리킬 포인터가 필요하기 때문

	-> 부모쪽인 액터에서 컴포넌트를 갖기 때문에 액터의 소멸자에서 알아서 메모리를 해제해줌
		-> 자식->부모순으로 소멸자가 호출하기때문에 자식에선 부모에 붙은 컴포넌트를 굳이 소멸할 필요없음



---------------------------------------------------------------------------------

마찬가지로 MainHUD 에서 PlayerInfo의 값들을 관리할때
	-> PlayerInfo에서의 


GetWidgetFromName() :  BP에서 설정한 PlayerInfo 위젯의 이름을 넣고 함수를 호출함










---------------------------------------------------------------------------------



몬스터의 머리위에 띄울 UI_MonsterHP

	-> Widget Component : 위젯이 실제 월드에 있게하는 기능
		-> 액터가 위젯 컴포넌트를 가져야 위젯을 쓸 수 있음
		-> HP바가 몬스터에 붙어 따라다녀야하기 때문에
			-> 씬 컴포넌트임




몬스터의 BeginPlay가 호출되고나서  그 이후에 위젯의 NativeConstruct가 수행된다.



---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
