


인벤토리
	-> 위젯블루프린트 생성
	-> 스케일박스->크기박스->캔버스패널


	캔버스패널에 리스트 뷰를 추가
	리스트 뷰 : 해당 리스트에 아이템들이 들어감
		-> 리스트 뷰는 채울 아이템의 타입을 반드시 지정해줘야한다.
			ex. 텍스트 or 이미지 or 사용자지정타입
		-> 이 타입을 엔트리 위젯 클래스라고 함

다시 UI_InventoryItem 을 생성
	-> 캔버스 패널에 이미지 하나 추가
	-> 우리가 만들 인벤토리는 빈공간의 알파를 0으로 해서 뒷 화면이 보이게할것
		-> 근데 빈공간을 클릭하면 인벤이아니라 게임화면이 클릭됨
		-> 캔버스패널에 보더 하나추가해서 알파를 0으로 세팅

	캔버스패널에 텍스트 하나 추가 : ItemName
		-> Item 정보 출력할것

	텍스트 하나 더 추가 : count
		-> Item 수량을 출력




---------------------------------------------------------------------------------

다시 UI_Inventory로 가서
	-> 아직까지는 리스트를 구성하는 요소의 정보가 없었음

	-> 그래프의 클래스세팅으로가서 디테일
		-> 구현된 인터페이스 -> 추가 -> 유저오브젝트리스트엔트리 선택

	-> 다시 UI_Inventory의 리스트 엔트리에 클래스 세팅

---------------------------------------------------------------------------------

cpp : InventoryBase에서 m_ListView-AddItem을 호출해서 리스트뷰에 아이템을 추가

	-> 인자 타입은 UObject임
	-> 우리가 직접 UObject를 상속받는 아이템 클래스를 만들어야함

	필요한 정보?
	-> Icon 이미지 : 이미지 경로
	-> Item 이름, Item 갯수




---------------------------------------------------------------------------------


전체적인 구조

	UI_Inventory > ListView > UI_InventoryItem
	UObject를 상속받는 ItemDataBase 클래스를 생성했음

	-> UI_Inventory 와 UI_InventoryItem는 각각 부모 c++클래스를 만들어 놔서
	-> UI_Inventory 는 자신의 ListView를 가리키는 포인터 변수를 가지고 있고
	-> UI_InventoryItem는 템 이미지, 수량 등의 정보를 담는 유저위젯
		-> 이제 ItemDataBase를 전달받아 이 정보로 실제 유저위젯 세팅






---------------------------------------------------------------------------------

언리얼에서 자주 사용하는 문자열 자료형

FString
FText
FName













---------------------------------------------------------------------------------

인벤토리는 데이터 상의 인벤토리와, 사용자에게 보여주는 인벤토리 두가지
	-> 이제 캐릭터의 실제 인벤토리를 만듬


게임 인스턴스에 인벤토리 매니저를 생성
	-> 인벤토리는 항상 있게 할거여서, 게임모드가 바뀌어도 유지되게함


GameInfo.h 에 데이터테이블에 슬 구조체 작성







---------------------------------------------------------------------------------















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
















---------------------------------------------------------------------------------
